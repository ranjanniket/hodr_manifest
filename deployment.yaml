apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: hodr
  name: hodr
  labels:
    app: hodr
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hodr
  template:
    metadata:
      labels:
        app: hodr
    spec:
      containers:
      - name: hodr-container
        image: niket50/hodr:37
        ports:
        - containerPort: 8080
        envFrom:
        - configMapRef:
            name: env-hodr
---
apiVersion: v1
kind: Service
metadata:
  namespace: hodr
  name: hodr-svc
spec:
  selector:
    app: hodr
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: NodePort
---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: hodr
  name: env-hodr
data:
  "HOST_ADDR": ":8080"
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  namespace: hodr
  name: hodr
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: hodr
  minReplicas: 1
  maxReplicas: 4
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: hodr
  name: hodr
  annotations:
    ingressClassName: nginx
spec:
  rules:
    - host: ec2-65-2-186-48.ap-south-1.compute.amazonaws.com
      http:
        paths:
          - path: /hodr/*
            pathType: Prefix
            backend:
              service:
                name: hodr-svc
                port:
                  number: 80
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  namespace: hodr
  name: hodr
spec:
  podSelector:
    matchLabels:
      app: hodr
  policyTypes:
  - Ingress
  ingress: []

